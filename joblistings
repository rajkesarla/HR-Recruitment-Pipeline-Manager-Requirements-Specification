component.ts
import { Component ,OnInit} from '@angular/core';
import { JobService } from './job.service';

@Component({
  selector: 'app-joblistings',
  templateUrl: './joblistings.component.html',
  styleUrls: ['./joblistings.component.css']
})
export class JoblistingsComponent implements OnInit{
  jobListings: any[] = [];

  constructor(private jobService: JobService) {}

  ngOnInit(): void {
    this.jobService.getActiveJobs().subscribe({
      next: (jobs) => this.jobListings = jobs,
      error: (err) => console.error('Error loading job listings', err)
    });
  }
  }



service.ts
import { Injectable } from '@angular/core';
import { HttpClient } from '@angular/common/http';
import { Observable ,BehaviorSubject} from 'rxjs';
import { tap } from 'rxjs/operators';

@Injectable({
  providedIn: 'root'
})
export class JobService {

  private activeJobsUrl = 'http://localhost:8080/job/active';
  private jobsSubject = new BehaviorSubject<any[]>([]);
  public jobs$ = this.jobsSubject.asObservable();

  constructor(private http: HttpClient) {
    this.loadActiveJobs();
  }

  // Fetch all active jobs and update observable
  private loadActiveJobs() {
    this.http.get<any[]>(this.activeJobsUrl).subscribe({
      next: (jobs) => this.jobsSubject.next(jobs),
      error: (err) => console.error('Failed to load active jobs', err)
    });
  }

  // Used in component to subscribe to job updates
  getActiveJobs(): Observable<any[]> {
    return this.jobs$;
  }

  // Call this after creating a new job
  refreshJobs() {
    this.loadActiveJobs();
  }
}

html file

<div class="container mt-4">
    <h2 class="text-center mb-4">Active Job Listings</h2>
  
    <!-- Show message if no jobs -->
    <div *ngIf="jobListings.length === 0" class="alert alert-warning text-center">
      No active job postings found.
    </div>
  
    <!-- Job cards -->
    <div class="row row-cols-1 row-cols-md-2 row-cols-lg-3 g-4" *ngIf="jobListings.length > 0">
      <div class="col" *ngFor="let job of jobListings">
        <div class="card h-100 shadow-sm">
          <div class="card-body">
            <h5 class="card-title">{{ job.title }}</h5>
            <h6 class="card-subtitle mb-2 text-muted">
              {{ job.department }} | {{ job.location }}
            </h6>
  
            <p class="card-text"><strong>Description:</strong> {{ job.description }}</p>
  
            <div *ngIf="job.requirements">
              <p><strong>Requirements:</strong> {{ job.requirements }}</p>
            </div>
  
            <div *ngIf="job.responsibilities">
              <p><strong>Responsibilities:</strong> {{ job.responsibilities }}</p>
            </div>
  
            <p><strong>Employment Type:</strong> {{ job.employmentType }}</p>
            <p><strong>Status:</strong> 
              <span class="badge bg-success" *ngIf="job.status === 'ACTIVE'">Active</span>
              <span class="badge bg-secondary" *ngIf="job.status !== 'ACTIVE'">{{ job.status }}</span>
            </p>
          </div>

           <!-- Apply Now Button -->
  <div class="text-end mt-3">
    <button class="btn apply-btn">Apply Now</button>
  </div>
          <div class="card-footer text-muted small">
            <!-- Posted by: {{ job.created_by || 'Unknown' }} <br> -->
            Date: {{ job.createdAt | date:'medium' }}
          </div>
        </div>
      </div>
    </div>
  </div>
  
